name: 🛠️Deploy staging application

on:
  workflow_run:
    workflows: ["🌐 Staging Front", "🛢 Staging Back"]
    types:
      - completed

jobs:
  deploy:
    name: 🚀 Deploy staging
    runs-on: [self-hosted]
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.workflow_id != github.run_id
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4.1.1
      - name: Check workflows status
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const frontWorkflow = "🌐 Staging Front";
            const backWorkflow = "🛢 Staging Back";
            
            const { data: runs } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.payload.workflow_run.head_branch,
              per_page: 10,
              status: 'completed'
            });
            
            const latestFront = runs.workflow_runs.find(run => run.name === frontWorkflow);
            const latestBack = runs.workflow_runs.find(run => run.name === backWorkflow);
            
            if (!latestFront || !latestBack) {
              core.setFailed('Could not find both workflow runs');
              return;
            }
            
            if (latestFront.conclusion !== 'success' || latestBack.conclusion !== 'success') {
              core.setFailed('Both workflows must succeed');
              return;
            }
            
            // Check if both runs are from the same commit
            if (latestFront.head_sha !== latestBack.head_sha) {
              core.setFailed('Workflows are from different commits');
              return;
            }
            
            console.log('Both workflows completed successfully for the same commit');
      - uses: ./.github/actions/deploy
        if: success()
        with:
          filter: 'staging'
          app_env: 'staging'
          backend_port: 3501
          port: 3001
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          compose_file: 'Compose'
          public_url: 'https://staging.leviosa.care'
          aws_region: ${{ secrets.AWS_REGION }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          stripe_secret_key: ${{ secrets.STRIPE_SECRET_KEY }}
          gmail_email: ${{ secrets.GMAIL_EMAIL }}
          gmail_password: ${{ secrets.GMAIL_PASSWORD }}
          google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
          google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
