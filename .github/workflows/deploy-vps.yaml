name: üöÄ Deploy application

on:
  workflow_run:
    workflows: ["üåê Front", "üõ¢Back"]
    types:
      - completed

jobs:
  deploy:
    name: üöÄ Deploy
    runs-on: [self-hosted]
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.workflow_id != github.run_id
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4.1.1
      - name: Install docker-compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '1.29.2'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Remove existing containers
        run: docker rm -f $(docker ps -aq) || true
      - name: Run docker-compose in production mode
        env:
          APP_ENV: ${{ secrets.APP_ENV}}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          GMAIL_EMAIL: ${{ secrets.GMAIL_EMAIL }}
          GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        run: |
          docker pull henga/event-reservation-app:frontend
          docker pull henga/event-reservation-app:backend
          docker compose up -d --force-recreate
          docker system prune --all --volumes --force
          # TODO: use the health endpoint to check if the repo works fine
