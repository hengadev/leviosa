name: 🌐 Front
on:
  pull_request: 
    branches:
      - main

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

defaults:
  run: 
    working-directory: ./frontend

jobs:
  # lint:
  #   name: ⬣ ESLint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v4
  #     - name: 📦 Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.pnpm-store
  #         key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-
  #     - name: Install dependencies with pnpm
  #       uses: ./.github/actions/pnpm-install
  #     - name: 🔬 Lint
  #       run: pnpm run lint

  # TODO: use that at the end of the project
  # typecheck:
  #   name: ʦ TypeScript
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v4
  #     - name: Install dependencies with pnpm
  #       uses: ./.github/actions/pnpm-install
  #     - name: 🔎 Type check
  #       run: pnpm run check

  vitest:
    name: 🧪 vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
      - name: Install dependencies with pnpm
        uses: ./.github/actions/pnpm-install
      - name: 🔎 Unit test
        run: pnpm run test:unit

  # NOTE: Can not make this work for now
  # playwright:
  #   timeout-minutes: 60
  #   name: 🧪 playwright
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v4
  #     - name: Install dependencies with pnpm
  #       uses: ./.github/actions/pnpm-install
  #     - name: Update apt and install dependencies
  #       run: |
  #         apt-get update
  #         apt-get install -y libenchant-dev libicu-dev libjpeg-turbo-official32=2.2 libvpx-dev libevent-dev
  #     - name: Install playwright browsers
  #       run: pnpm exec playwright install --with-deps
  #     - name: 🔎 Integration test
  #       run: pnpm run test:integration

  docker-front:
    name: 🐳 Push frontend application docker image
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/push-docker-image
        with:
          tag: 'frontend'
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          # TODO: add the google related environment variable for the frontend to build
          folder: frontend
          file: Dockerfile

