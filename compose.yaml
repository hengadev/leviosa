# NOTE: The example for using the docker compose option.
# TODO: Make that complete when you have both the frontend and the backend

version: "3.8" # Where to find that ?
services:
  web: 
    depends_on:
      - api
    build: ./frontend/
    container_name: frontend
    ports:
      - 5173:5173  
    environment:
      VITE_API_URL: http://localhost:8000
    develop: # for the docker compose watch mode
      watch: 
        - path: ./frontend/package.json
          action: rebuild
        - path: ./frontend/package-lock.json
          action: rebuild
        - path: ./frontend/
          target: /app
          action: sync
  api:
    depends_on:
      - db
    build: ./backend/
    container_name: api
    ports:
      - 8080:8080  
    environment: 
      # TODO: Use sqlite3 instead
      db_url: mongodb://db/anime
    develop: # for the docker compose watch mode
      # TODO: Change that with the correct  setup for a golang backend
      watch: 
        - path: ./backend/go.mod
          action: rebuild
        - path: ./backend/go.sum
          action: rebuild
        - path: ./backend/
          target: /app
          action: sync
  # TODO: Change the database used from postgres to sqlite, because the application is very light.
  db:
    # TODO: Est ce le bon nom ?
    image: postgres:latest-alpine3.18
    container_name: database
    environment: 
      # TODO: Use the file in the .env file to read the environment variables if you can.
      POSTGRES_USER: root 
      POSTGRES_PASSWORD: root 
    ports:
      - 27017:27017  
    volumes:
      - events:/data/db

volumes:
  events:
