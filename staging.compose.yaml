services:
  frontend: 
    depends_on:
      - backend
    image: henga/leviosa:staging-frontend
    container_name: staging-frontend-${GITHUB_RUN_ID}
    environment:
      - API_URL=backend:${BACKEND_PORT}
    restart: unless-stopped
    user: runner
    ports:
      - "127.0.0.1:${PORT}:${PORT}"
      - HOSTNAME=frontend:${PORT}
    networks:
      - staging-frontend-network
    cap_drop:
      - ALL

  backend:
    depends_on:
      - redis
    image: henga/leviosa:staging-backend
    container_name: staging-backend-${GITHUB_RUN_ID}
    user: runner
    networks:
      - staging-frontend-network
      - staging-backend-network
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - APP_ENV=staging
      - BACKEND_PORT=3501

      # TODO: use different values for other envs to not interfere with production
      - AWS_REGION 
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

      - GMAIL_EMAIL
      - GMAIL_PASSWORD

      - STRIPE_SECRET_KEY

      - REDIS_ADDR
      - REDIS_DB
      - REDIS_PASSWORD

      - FRONTEND_ORIGIN=frontend:${PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: staging-session-manager
    user: redis
    command: redis-server --requirepass secret
    networks:
      - staging-backend-network
    cap_drop:
      - ALL
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  staging-frontend-network:
  staging-backend-network:
